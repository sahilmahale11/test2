# generated by datamodel-codegen:
#   filename:  task_manager.yaml
#   timestamp: 2023-08-23T09:17:42+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field, constr


class CeleryTaskDetailsRequest(BaseModel):
    task_id: constr(min_length=1) = Field(..., description='ID of the Celery task.')
    task_name: constr(min_length=1) = Field(..., description='Name of the celery task')

class Status(Enum):
    INPROGRESS = 'INPROGRESS'
    SUCCESS = 'SUCCESS'
    FAILED = 'FAILED'


class CeleryTaskUpdateRequest(BaseModel):
    task_status: Optional[Status] = None


class CeleryTaskDetailsResponse(CeleryTaskDetailsRequest):
    task_status: Optional[Status] = None
    creation_time: Optional[datetime] = Field(
        None, description='Date and time when the Celery task was created.'
    )
    updation_time: Optional[datetime] = Field(
        None, description='Date and time when the Celery task was completed.'
    )
