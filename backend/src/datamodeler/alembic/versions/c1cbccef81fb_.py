"""empty message

Revision ID: c1cbccef81fb
Revises: 
Create Date: 2023-09-11 17:41:23.120278

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c1cbccef81fb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('encrypted_password', sa.String(), nullable=True),
    sa.Column('organization', sa.String(), nullable=True),
    sa.Column('trial', sa.Boolean(), nullable=True),
    sa.Column('trial_start_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pull_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('pr_id', sa.String(), nullable=True),
    sa.Column('run_id', sa.String(), nullable=True),
    sa.Column('uuid', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('branch_name', sa.String(), nullable=True),
    sa.Column('code_type', sa.Enum('SCRIPT', 'FUNCTION', 'CLASS', name='codetype'), nullable=True),
    sa.Column('language', sa.Enum('PYTHON', 'CPP', 'JAVA', name='language'), nullable=True),
    sa.Column('pr_status', sa.Enum('OPEN', 'CLOSE', name='prstatus'), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('url_path', sa.String(), nullable=True),
    sa.Column('embed_type', sa.Enum('TITLE', 'BODY', name='embedtype'), nullable=True),
    sa.Column('score', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_manager',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.Column('task_name', sa.String(), nullable=True),
    sa.Column('task_status', sa.Enum('INPROGRESS', 'SUCCESS', 'FAILED', name='taskstatus'), nullable=True),
    sa.Column('created_at', sa.String(), nullable=True),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('top_link_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('repo_code_metadata_uuid', sa.String(), nullable=True),
    sa.Column('project_requirement_metadata_uuid', sa.String(), nullable=True),
    sa.Column('score', sa.String(), nullable=True),
    sa.Column('human_verification', sa.Enum('PASS', 'FAIL', name='humanverification'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_oauth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.String(), nullable=True),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('oauth_provider', sa.String(), nullable=True),
    sa.Column('cloud_id', sa.String(), nullable=True),
    sa.Column('access_token_expiry', sa.TIMESTAMP(), nullable=True),
    sa.Column('project_site', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_project_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_oauth_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('project_name', sa.String(), nullable=True),
    sa.Column('project_key', sa.String(), nullable=True),
    sa.Column('setup_status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_oauth_id'], ['user_oauth.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_repo_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_oauth_id', sa.Integer(), nullable=True),
    sa.Column('repo_id', sa.String(), nullable=True),
    sa.Column('repo_name', sa.String(), nullable=True),
    sa.Column('owner_name', sa.String(), nullable=True),
    sa.Column('branch', sa.String(), nullable=True),
    sa.Column('setup_status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_oauth_id'], ['user_oauth.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_requirement_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_project_info_id', sa.Integer(), nullable=True),
    sa.Column('embed_uuid', sa.String(), nullable=True),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.Column('parent_id', sa.String(), nullable=True),
    sa.Column('issue_type', sa.Enum('EPIC', 'STORY', 'TASK', 'BUG', name='issuetype'), nullable=True),
    sa.Column('embed_type', sa.Enum('TITLE', 'BODY', name='embedtype'), nullable=True),
    sa.Column('url_path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_project_info_id'], ['user_project_info.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repo_code_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_repo_info_id', sa.Integer(), nullable=True),
    sa.Column('embed_uuid', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('branch_name', sa.String(), nullable=True),
    sa.Column('code_type', sa.Enum('SCRIPT', 'FUNCTION', 'CLASS', name='codetype'), nullable=True),
    sa.Column('language', sa.Enum('PYTHON', 'CPP', 'JAVA', name='language'), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('embed_type', sa.Enum('TITLE', 'BODY', name='embedtype'), nullable=True),
    sa.Column('url_path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_repo_info_id'], ['user_repo_info.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_resource_linkage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_repo_info_id', sa.Integer(), nullable=True),
    sa.Column('user_project_info_id', sa.Integer(), nullable=True),
    sa.Column('linkage_status', sa.Enum('INITIATED', 'FAILED', 'AWAITING_VALIDATION', 'SUPPORTED', 'UNSUPPORTED', 'COMPLETED', name='linkagestatusenum'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_project_info_id'], ['user_project_info.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_repo_info_id'], ['user_repo_info.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_resource_linkage')
    op.drop_table('repo_code_metadata')
    op.drop_table('project_requirement_metadata')
    op.drop_table('user_repo_info')
    op.drop_table('user_project_info')
    op.drop_table('user_oauth')
    op.drop_table('top_link_score')
    op.drop_table('task_manager')
    op.drop_table('pull_request')
    op.drop_table('user')
    # ### end Alembic commands ###
